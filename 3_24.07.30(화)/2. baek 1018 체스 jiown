package com.ssafy.beak.num1018;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        // buffered 공부하기
        String[] dimensions = br.readLine().split(" ");
        int N = Integer.parseInt(dimensions[0]);
        int M = Integer.parseInt(dimensions[1]);

        char[][] board = new char[N][M];

        // 보드 입력
        for(int i = 0; i < N;i++) {
            board[i] = br.readLine().toCharArray(); // 문자열을 char 배열 형태로 변환해주는 함수
        }

        
        int resultMin = 1000000000;

        // 8*8 조합 찾기
        for(int r = 0;r <= N-8; r++) {
            for(int c = 0; c <= M-8;c++) {

                int countcase1 = 0;
                int countcase2 = 0;
                // 8*8 조합 안에서 색깔 비교,,,
                for(int nr = 0;  nr < 8; nr++) {
                    for (int nc = 0; nc < 8; nc++) {

                        char case1 = ((nr + nc) % 2 == 0) ? 'W' : 'B'; // 짝수가 B
                        char case2 = ((nr + nc) % 2 == 0) ? 'B' : 'W'; // 짝수가 H

                        if (board[r + nr][c + nc] != case1) countcase1++; // 만약 짝수가 B아니라면 -> ++
                        if (board[r + nr][c + nc] != case2) countcase2++; // 만약 짝수가 W아니라면 -> ++

                    }
                }
                
                // case 둘 중 적은 숫자 선택
                int result = Math.min(countcase1, countcase2);

                resultMin = Math.min(result, resultMin);

            }
        }
        System.out.println(resultMin);
        
        
    }
}
